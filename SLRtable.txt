State0:
    ACTION:
           !EOF!  :  R14
           (  :  R14
           {  :  R14
           ;  :  R14
           +  :  R14
           character  :  R14
           ID  :  R14
           -  :  R14
           if  :  R14
           integer  :  R14
           while  :  R14
           }  :  R14
    GOTO:
           statements  :  1

State1:
    ACTION:
           !EOF!  :  ACC-1
           (  :  R50
           ;  :  R50
           {  :  R50
           +  :  R50
           character  :  R50
           ID  :  R50
           -  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  2

State2:
    ACTION:
           (  :  S26
           {  :  S10
           ;  :  S12
           +  :  S24
           character  :  S28
           ID  :  S15
           -  :  S23
           if  :  S8
           integer  :  S27
           while  :  S9
    GOTO:
           logicalAndExp  :  16
           expressionStatement  :  7
           additiveExp  :  19
           unaryExp  :  21
           assignmentExp  :  13
           compoundStatement  :  6
           constant  :  25
           equalityExp  :  17
           expression  :  11
           logicalOrExp  :  14
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  18
           selectionStatement  :  4
           statement  :  3
           whileStatement  :  5

State3:
    ACTION:
           !EOF!  :  R13
           (  :  R13
           ;  :  R13
           {  :  R13
           +  :  R13
           character  :  R13
           ID  :  R13
           -  :  R13
           if  :  R13
           integer  :  R13
           while  :  R13
           }  :  R13
    GOTO:

State4:
    ACTION:
           !EOF!  :  R6
           (  :  R6
           {  :  R6
           ;  :  R6
           +  :  R6
           else  :  R6
           character  :  R6
           ID  :  R6
           -  :  R6
           if  :  R6
           integer  :  R6
           while  :  R6
           }  :  R6
    GOTO:

State5:
    ACTION:
           !EOF!  :  R7
           (  :  R7
           {  :  R7
           ;  :  R7
           +  :  R7
           else  :  R7
           character  :  R7
           ID  :  R7
           -  :  R7
           if  :  R7
           integer  :  R7
           while  :  R7
           }  :  R7
    GOTO:

State6:
    ACTION:
           !EOF!  :  R8
           (  :  R8
           ;  :  R8
           {  :  R8
           +  :  R8
           else  :  R8
           character  :  R8
           ID  :  R8
           -  :  R8
           if  :  R8
           integer  :  R8
           while  :  R8
           }  :  R8
    GOTO:

State7:
    ACTION:
           !EOF!  :  R9
           (  :  R9
           ;  :  R9
           {  :  R9
           +  :  R9
           else  :  R9
           character  :  R9
           ID  :  R9
           -  :  R9
           if  :  R9
           integer  :  R9
           while  :  R9
           }  :  R9
    GOTO:

State8:
    ACTION:
           (  :  S29
    GOTO:

State9:
    ACTION:
           (  :  R50
           {  :  R50
           ;  :  R50
           +  :  R50
           character  :  R50
           ID  :  R50
           -  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  30

State10:
    ACTION:
           char  :  S34
           int  :  S33
           (  :  R19
           {  :  R19
           ;  :  R19
           +  :  R19
           character  :  R19
           ID  :  R19
           -  :  R19
           if  :  R19
           integer  :  R19
           while  :  R19
           }  :  R19
    GOTO:
           declaration  :  31
           typeSpecifier  :  32

State11:
    ACTION:
           ,  :  S36
           ;  :  S35
    GOTO:

State12:
    ACTION:
           !EOF!  :  R11
           (  :  R11
           {  :  R11
           ;  :  R11
           +  :  R11
           else  :  R11
           character  :  R11
           ID  :  R11
           -  :  R11
           if  :  R11
           integer  :  R11
           while  :  R11
           }  :  R11
    GOTO:

State13:
    ACTION:
           )  :  R22
           ,  :  R22
           ;  :  R22
    GOTO:

State14:
    ACTION:
           ||  :  S37
           )  :  R24
           ,  :  R24
           ;  :  R24
    GOTO:

State15:
    ACTION:
           -  :  R47
           =  :  S38
           ,  :  R47
           !=  :  R47
           *  :  R47
           &&  :  R47
           )  :  R47
           +  :  R47
           /  :  R47
           ;  :  R47
           <  :  R47
           <=  :  R47
           ==  :  R47
           >  :  R47
           >=  :  R47
           ||  :  R47
    GOTO:

State16:
    ACTION:
           &&  :  S39
           ||  :  R26
           )  :  R26
           ,  :  R26
           ;  :  R26
    GOTO:

State17:
    ACTION:
           !=  :  S41
           ,  :  R28
           ==  :  S40
           &&  :  R28
           ||  :  R28
           )  :  R28
           ;  :  R28
    GOTO:

State18:
    ACTION:
           ,  :  R30
           !=  :  R30
           <  :  S42
           <=  :  S43
           >  :  S44
           )  :  R30
           >=  :  S45
           &&  :  R30
           ;  :  R30
           ==  :  R30
           ||  :  R30
    GOTO:

State19:
    ACTION:
           ;  :  R33
           +  :  S46
           -  :  S47
           <  :  R33
           ,  :  R33
           !=  :  R33
           &&  :  R33
           )  :  R33
           <=  :  R33
           ==  :  R33
           >  :  R33
           >=  :  R33
           ||  :  R33
    GOTO:

State20:
    ACTION:
           &&  :  R38
           *  :  S48
           /  :  S49
           ,  :  R38
           !=  :  R38
           )  :  R38
           +  :  R38
           -  :  R38
           ;  :  R38
           <  :  R38
           <=  :  R38
           ==  :  R38
           >  :  R38
           >=  :  R38
           ||  :  R38
    GOTO:

State21:
    ACTION:
           ,  :  R41
           !=  :  R41
           *  :  R41
           &&  :  R41
           )  :  R41
           +  :  R41
           -  :  R41
           /  :  R41
           ;  :  R41
           <  :  R41
           <=  :  R41
           ==  :  R41
           >  :  R41
           >=  :  R41
           ||  :  R41
    GOTO:

State22:
    ACTION:
           ,  :  R44
           !=  :  R44
           *  :  R44
           &&  :  R44
           )  :  R44
           +  :  R44
           -  :  R44
           /  :  R44
           ;  :  R44
           <  :  R44
           <=  :  R44
           ==  :  R44
           >  :  R44
           >=  :  R44
           ||  :  R44
    GOTO:

State23:
    ACTION:
           (  :  S26
           character  :  S28
           ID  :  S51
           integer  :  S27
    GOTO:
           constant  :  25
           primaryExp  :  50

State24:
    ACTION:
           (  :  S26
           character  :  S28
           ID  :  S51
           integer  :  S27
    GOTO:
           constant  :  25
           primaryExp  :  52

State25:
    ACTION:
           ,  :  R48
           !=  :  R48
           *  :  R48
           &&  :  R48
           )  :  R48
           +  :  R48
           -  :  R48
           /  :  R48
           ;  :  R48
           <  :  R48
           <=  :  R48
           ==  :  R48
           >  :  R48
           >=  :  R48
           ||  :  R48
    GOTO:

State26:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S15
           -  :  S23
           integer  :  S27
    GOTO:
           logicalAndExp  :  16
           additiveExp  :  19
           unaryExp  :  21
           assignmentExp  :  13
           constant  :  25
           logicalOrExp  :  14
           equalityExp  :  17
           expression  :  53
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  18

State27:
    ACTION:
           ,  :  R1
           !=  :  R1
           *  :  R1
           &&  :  R1
           )  :  R1
           +  :  R1
           -  :  R1
           /  :  R1
           ;  :  R1
           <  :  R1
           <=  :  R1
           ==  :  R1
           >  :  R1
           >=  :  R1
           ||  :  R1
    GOTO:

State28:
    ACTION:
           ,  :  R2
           !=  :  R2
           *  :  R2
           &&  :  R2
           )  :  R2
           +  :  R2
           -  :  R2
           /  :  R2
           ;  :  R2
           <  :  R2
           <=  :  R2
           ==  :  R2
           >  :  R2
           >=  :  R2
           ||  :  R2
    GOTO:

State29:
    ACTION:
           (  :  S26
           +  :  S24
           -  :  S23
           ID  :  S15
           character  :  S28
           integer  :  S27
    GOTO:
           logicalAndExp  :  16
           additiveExp  :  19
           assignmentExp  :  13
           unaryExp  :  21
           constant  :  25
           logicalOrExp  :  14
           equalityExp  :  17
           expression  :  54
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  18

State30:
    ACTION:
           (  :  S55
    GOTO:

State31:
    ACTION:
           !EOF!  :  R14
           (  :  R14
           ;  :  R14
           {  :  R14
           +  :  R14
           character  :  R14
           ID  :  R14
           -  :  R14
           if  :  R14
           integer  :  R14
           while  :  R14
           }  :  R14
    GOTO:
           statements  :  56

State32:
    ACTION:
           ;  :  S58
           ID  :  S59
    GOTO:
           initDeclarator  :  57

State33:
    ACTION:
           ;  :  R15
           ID  :  R15
    GOTO:

State34:
    ACTION:
           ;  :  R16
           ID  :  R16
    GOTO:

State35:
    ACTION:
           !EOF!  :  R10
           (  :  R10
           ;  :  R10
           {  :  R10
           +  :  R10
           else  :  R10
           character  :  R10
           ID  :  R10
           -  :  R10
           if  :  R10
           integer  :  R10
           while  :  R10
           }  :  R10
    GOTO:

State36:
    ACTION:
           (  :  S26
           +  :  S24
           -  :  S23
           ID  :  S15
           character  :  S28
           integer  :  S27
    GOTO:
           logicalAndExp  :  16
           additiveExp  :  19
           assignmentExp  :  60
           unaryExp  :  21
           constant  :  25
           primaryExp  :  22
           logicalOrExp  :  14
           equalityExp  :  17
           multiplicativeExp  :  20
           relationalExp  :  18

State37:
    ACTION:
           (  :  R50
           ;  :  R50
           {  :  R50
           +  :  R50
           character  :  R50
           ID  :  R50
           -  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  61

State38:
    ACTION:
           (  :  S26
           +  :  S24
           -  :  S23
           ID  :  S51
           character  :  S28
           integer  :  S27
    GOTO:
           logicalAndExp  :  16
           additiveExp  :  19
           constant  :  25
           primaryExp  :  22
           logicalOrExp  :  62
           equalityExp  :  17
           multiplicativeExp  :  20
           relationalExp  :  18
           unaryExp  :  21

State39:
    ACTION:
           (  :  R50
           ;  :  R50
           {  :  R50
           +  :  R50
           character  :  R50
           ID  :  R50
           -  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  63

State40:
    ACTION:
           (  :  S26
           +  :  S24
           -  :  S23
           ID  :  S51
           character  :  S28
           integer  :  S27
    GOTO:
           additiveExp  :  19
           constant  :  25
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  64
           unaryExp  :  21

State41:
    ACTION:
           (  :  S26
           +  :  S24
           -  :  S23
           ID  :  S51
           character  :  S28
           integer  :  S27
    GOTO:
           additiveExp  :  19
           constant  :  25
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  65
           unaryExp  :  21

State42:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           additiveExp  :  66
           constant  :  25
           multiplicativeExp  :  20
           primaryExp  :  22
           unaryExp  :  21

State43:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           additiveExp  :  67
           constant  :  25
           multiplicativeExp  :  20
           primaryExp  :  22
           unaryExp  :  21

State44:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           additiveExp  :  68
           constant  :  25
           multiplicativeExp  :  20
           primaryExp  :  22
           unaryExp  :  21

State45:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           additiveExp  :  69
           constant  :  25
           multiplicativeExp  :  20
           primaryExp  :  22
           unaryExp  :  21

State46:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           constant  :  25
           multiplicativeExp  :  70
           primaryExp  :  22
           unaryExp  :  21

State47:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           constant  :  25
           multiplicativeExp  :  71
           primaryExp  :  22
           unaryExp  :  21

State48:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           constant  :  25
           primaryExp  :  22
           unaryExp  :  72

State49:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           constant  :  25
           primaryExp  :  22
           unaryExp  :  73

State50:
    ACTION:
           ,  :  R45
           !=  :  R45
           *  :  R45
           &&  :  R45
           )  :  R45
           +  :  R45
           -  :  R45
           /  :  R45
           ;  :  R45
           <  :  R45
           <=  :  R45
           ==  :  R45
           >  :  R45
           >=  :  R45
           ||  :  R45
    GOTO:

State51:
    ACTION:
           ,  :  R47
           !=  :  R47
           *  :  R47
           &&  :  R47
           )  :  R47
           +  :  R47
           -  :  R47
           /  :  R47
           ;  :  R47
           <  :  R47
           <=  :  R47
           ==  :  R47
           >  :  R47
           >=  :  R47
           ||  :  R47
    GOTO:

State52:
    ACTION:
           ,  :  R46
           !=  :  R46
           *  :  R46
           &&  :  R46
           )  :  R46
           +  :  R46
           -  :  R46
           /  :  R46
           ;  :  R46
           <  :  R46
           <=  :  R46
           ==  :  R46
           >  :  R46
           >=  :  R46
           ||  :  R46
    GOTO:

State53:
    ACTION:
           )  :  S74
           ,  :  S36
    GOTO:

State54:
    ACTION:
           )  :  S75
           ,  :  S36
    GOTO:

State55:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S15
           -  :  S23
           integer  :  S27
    GOTO:
           logicalAndExp  :  16
           additiveExp  :  19
           unaryExp  :  21
           assignmentExp  :  13
           constant  :  25
           logicalOrExp  :  14
           equalityExp  :  17
           expression  :  76
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  18

State56:
    ACTION:
           character  :  R50
           ID  :  R50
           -  :  R50
           }  :  S77
           (  :  R50
           {  :  R50
           ;  :  R50
           +  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  2

State57:
    ACTION:
           ;  :  S78
    GOTO:

State58:
    ACTION:
           (  :  R18
           {  :  R18
           ;  :  R18
           +  :  R18
           character  :  R18
           ID  :  R18
           -  :  R18
           if  :  R18
           integer  :  R18
           while  :  R18
           }  :  R18
    GOTO:

State59:
    ACTION:
           =  :  S79
           ;  :  R20
    GOTO:

State60:
    ACTION:
           )  :  R23
           ,  :  R23
           ;  :  R23
    GOTO:

State61:
    ACTION:
           (  :  S26
           +  :  S24
           character  :  S28
           ID  :  S51
           -  :  S23
           integer  :  S27
    GOTO:
           logicalAndExp  :  80
           additiveExp  :  19
           constant  :  25
           primaryExp  :  22
           equalityExp  :  17
           multiplicativeExp  :  20
           relationalExp  :  18
           unaryExp  :  21

State62:
    ACTION:
           ||  :  S37
           )  :  R25
           ,  :  R25
           ;  :  R25
    GOTO:

State63:
    ACTION:
           (  :  S26
           +  :  S24
           -  :  S23
           ID  :  S51
           character  :  S28
           integer  :  S27
    GOTO:
           additiveExp  :  19
           constant  :  25
           equalityExp  :  81
           primaryExp  :  22
           multiplicativeExp  :  20
           relationalExp  :  18
           unaryExp  :  21

State64:
    ACTION:
           ,  :  R31
           !=  :  R31
           <  :  S42
           <=  :  S43
           >  :  S44
           )  :  R31
           >=  :  S45
           &&  :  R31
           ;  :  R31
           ==  :  R31
           ||  :  R31
    GOTO:

State65:
    ACTION:
           ,  :  R32
           !=  :  R32
           <  :  S42
           <=  :  S43
           >  :  S44
           )  :  R32
           >=  :  S45
           &&  :  R32
           ;  :  R32
           ==  :  R32
           ||  :  R32
    GOTO:

State66:
    ACTION:
           ;  :  R34
           +  :  S46
           -  :  S47
           <  :  R34
           ,  :  R34
           !=  :  R34
           &&  :  R34
           )  :  R34
           <=  :  R34
           ==  :  R34
           >  :  R34
           >=  :  R34
           ||  :  R34
    GOTO:

State67:
    ACTION:
           ;  :  R35
           +  :  S46
           -  :  S47
           <  :  R35
           ,  :  R35
           !=  :  R35
           &&  :  R35
           )  :  R35
           <=  :  R35
           ==  :  R35
           >  :  R35
           >=  :  R35
           ||  :  R35
    GOTO:

State68:
    ACTION:
           ;  :  R36
           +  :  S46
           -  :  S47
           <  :  R36
           ,  :  R36
           !=  :  R36
           &&  :  R36
           )  :  R36
           <=  :  R36
           ==  :  R36
           >  :  R36
           >=  :  R36
           ||  :  R36
    GOTO:

State69:
    ACTION:
           ;  :  R37
           +  :  S46
           -  :  S47
           <  :  R37
           ,  :  R37
           !=  :  R37
           &&  :  R37
           )  :  R37
           <=  :  R37
           ==  :  R37
           >  :  R37
           >=  :  R37
           ||  :  R37
    GOTO:

State70:
    ACTION:
           &&  :  R39
           *  :  S48
           /  :  S49
           ,  :  R39
           !=  :  R39
           )  :  R39
           +  :  R39
           -  :  R39
           ;  :  R39
           <  :  R39
           <=  :  R39
           ==  :  R39
           >  :  R39
           >=  :  R39
           ||  :  R39
    GOTO:

State71:
    ACTION:
           &&  :  R40
           *  :  S48
           /  :  S49
           ,  :  R40
           !=  :  R40
           )  :  R40
           +  :  R40
           -  :  R40
           ;  :  R40
           <  :  R40
           <=  :  R40
           ==  :  R40
           >  :  R40
           >=  :  R40
           ||  :  R40
    GOTO:

State72:
    ACTION:
           ,  :  R42
           !=  :  R42
           *  :  R42
           &&  :  R42
           )  :  R42
           +  :  R42
           -  :  R42
           /  :  R42
           ;  :  R42
           <  :  R42
           <=  :  R42
           ==  :  R42
           >  :  R42
           >=  :  R42
           ||  :  R42
    GOTO:

State73:
    ACTION:
           ,  :  R43
           !=  :  R43
           *  :  R43
           &&  :  R43
           )  :  R43
           +  :  R43
           -  :  R43
           /  :  R43
           ;  :  R43
           <  :  R43
           <=  :  R43
           ==  :  R43
           >  :  R43
           >=  :  R43
           ||  :  R43
    GOTO:

State74:
    ACTION:
           ,  :  R49
           !=  :  R49
           *  :  R49
           &&  :  R49
           )  :  R49
           +  :  R49
           -  :  R49
           /  :  R49
           ;  :  R49
           <  :  R49
           <=  :  R49
           ==  :  R49
           >  :  R49
           >=  :  R49
           ||  :  R49
    GOTO:

State75:
    ACTION:
           (  :  R50
           ;  :  R50
           {  :  R50
           +  :  R50
           character  :  R50
           ID  :  R50
           -  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  82

State76:
    ACTION:
           )  :  S83
           ,  :  S36
    GOTO:

State77:
    ACTION:
           !EOF!  :  R12
           (  :  R12
           ;  :  R12
           {  :  R12
           +  :  R12
           else  :  R12
           character  :  R12
           ID  :  R12
           -  :  R12
           if  :  R12
           integer  :  R12
           while  :  R12
           }  :  R12
    GOTO:

State78:
    ACTION:
           char  :  S34
           int  :  S33
           (  :  R19
           ;  :  R19
           {  :  R19
           +  :  R19
           character  :  R19
           ID  :  R19
           -  :  R19
           if  :  R19
           integer  :  R19
           while  :  R19
           }  :  R19
    GOTO:
           declaration  :  84
           typeSpecifier  :  32

State79:
    ACTION:
           (  :  S26
           +  :  S24
           -  :  S23
           ID  :  S15
           character  :  S28
           integer  :  S27
    GOTO:
           logicalAndExp  :  16
           additiveExp  :  19
           assignmentExp  :  85
           unaryExp  :  21
           constant  :  25
           primaryExp  :  22
           logicalOrExp  :  14
           equalityExp  :  17
           multiplicativeExp  :  20
           relationalExp  :  18

State80:
    ACTION:
           &&  :  S39
           ||  :  R27
           )  :  R27
           ,  :  R27
           ;  :  R27
    GOTO:

State81:
    ACTION:
           !=  :  S41
           ,  :  R29
           ==  :  S40
           &&  :  R29
           ||  :  R29
           )  :  R29
           ;  :  R29
    GOTO:

State82:
    ACTION:
           (  :  S26
           ;  :  S12
           {  :  S10
           +  :  S24
           character  :  S28
           ID  :  S15
           -  :  S23
           if  :  S8
           integer  :  S27
           while  :  S9
    GOTO:
           logicalAndExp  :  16
           expressionStatement  :  7
           additiveExp  :  19
           assignmentExp  :  13
           unaryExp  :  21
           compoundStatement  :  6
           constant  :  25
           equalityExp  :  17
           expression  :  11
           logicalOrExp  :  14
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  18
           selectionStatement  :  4
           statement  :  86
           whileStatement  :  5

State83:
    ACTION:
           (  :  R50
           ;  :  R50
           {  :  R50
           +  :  R50
           character  :  R50
           ID  :  R50
           -  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  87

State84:
    ACTION:
           (  :  R17
           ;  :  R17
           {  :  R17
           +  :  R17
           character  :  R17
           ID  :  R17
           -  :  R17
           if  :  R17
           integer  :  R17
           while  :  R17
           }  :  R17
    GOTO:

State85:
    ACTION:
           ;  :  R21
    GOTO:

State86:
    ACTION:
           !EOF!  :  R4
           (  :  R4
           ;  :  R4
           {  :  R4
           +  :  R4
           else  :  R51
           character  :  R4
           ID  :  R4
           -  :  R4
           if  :  R4
           integer  :  R4
           while  :  R4
           }  :  R4
    GOTO:
           N  :  88

State87:
    ACTION:
           (  :  S26
           ;  :  S12
           {  :  S10
           +  :  S24
           character  :  S28
           ID  :  S15
           -  :  S23
           if  :  S8
           integer  :  S27
           while  :  S9
    GOTO:
           logicalAndExp  :  16
           expressionStatement  :  7
           additiveExp  :  19
           assignmentExp  :  13
           unaryExp  :  21
           compoundStatement  :  6
           constant  :  25
           equalityExp  :  17
           expression  :  11
           logicalOrExp  :  14
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  18
           selectionStatement  :  4
           statement  :  89
           whileStatement  :  5

State88:
    ACTION:
           else  :  S90
    GOTO:

State89:
    ACTION:
           !EOF!  :  R3
           (  :  R3
           ;  :  R3
           {  :  R3
           +  :  R3
           else  :  R3
           character  :  R3
           ID  :  R3
           -  :  R3
           if  :  R3
           integer  :  R3
           while  :  R3
           }  :  R3
    GOTO:

State90:
    ACTION:
           (  :  R50
           ;  :  R50
           {  :  R50
           +  :  R50
           character  :  R50
           ID  :  R50
           -  :  R50
           if  :  R50
           integer  :  R50
           while  :  R50
    GOTO:
           M  :  91

State91:
    ACTION:
           (  :  S26
           ;  :  S12
           {  :  S10
           +  :  S24
           character  :  S28
           ID  :  S15
           -  :  S23
           if  :  S8
           integer  :  S27
           while  :  S9
    GOTO:
           logicalAndExp  :  16
           expressionStatement  :  7
           additiveExp  :  19
           assignmentExp  :  13
           unaryExp  :  21
           compoundStatement  :  6
           constant  :  25
           equalityExp  :  17
           expression  :  11
           logicalOrExp  :  14
           multiplicativeExp  :  20
           primaryExp  :  22
           relationalExp  :  18
           selectionStatement  :  4
           statement  :  92
           whileStatement  :  5

State92:
    ACTION:
           !EOF!  :  R5
           (  :  R5
           ;  :  R5
           {  :  R5
           +  :  R5
           else  :  R5
           character  :  R5
           ID  :  R5
           -  :  R5
           if  :  R5
           integer  :  R5
           while  :  R5
           }  :  R5
    GOTO:

